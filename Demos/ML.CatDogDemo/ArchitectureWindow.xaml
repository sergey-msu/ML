<Window x:Class="ML.CatDogDemo.ArchitectureWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ML.CatDogDemo"
        Title="Convolutional Net Architecture"
        ResizeMode="NoResize"
        Height="300"
        Width="300"
        WindowStartupLocation="CenterScreen">

  <Grid HorizontalAlignment="Center" Margin="0,10,0,0">
    <Grid.RowDefinitions>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>

    <TextBlock Grid.Row="0" Grid.Column="0">CNN:</TextBlock>
    <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0">
                                      conv(3,16)-conv(3,16)-maxp(2)-<LineBreak/>
                                      drop(0.25)-<LineBreak/>
                                      conv(3,32)-maxp(2)-<LineBreak/>
                                      drop(0.25)-<LineBreak/>
                                      flat(256)-<LineBreak/>
                                      drop(0.5)-<LineBreak/>
                                      out(2)<LineBreak/>
    </TextBlock>

    <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,10,0,0">Train Algorithm:</TextBlock>
    <TextBlock Grid.Row="1" Grid.Column="1" Margin="5,10,0,0">Loss: cross entropy<LineBreak/>
                                      Batch size: 4<LineBreak/>
                                      Optimizer: Adadelta<LineBreak/>
                                      Regularizator: L2(0.001)<LineBreak/>
                                      LRate: drop based (5, 05)<LineBreak/>
    </TextBlock>

    <Button Margin="5" Grid.Row="2" Grid.ColumnSpan="2" Height="24" Width="75" Click="Button_Click">Close</Button>

  </Grid>

</Window>
